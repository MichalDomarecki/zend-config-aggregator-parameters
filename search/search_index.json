{
    "docs": [
        {
            "location": "/",
            "text": "../../README.md",
            "title": "Home"
        },
        {
            "location": "/usage/",
            "text": "Usage\n\n\nThis package supplies a \nzend-config-aggregator post processor\n\nthat consumes the \nSymfony DependencyInjection ParameterBag\n\nin order to allow users to define parameters to re-use within their\nconfiguration.\n\n\nAs an example, one could define an API key, cache path, or other common\nfilesystem location \nonce\n as a \nparameter\n, and then refer to that parameter\n\nmultiple times\n within the configuration, in order to simplify updates to the\nvalue.\n\n\nParameters are referenced within configuration using \n%name%\n notation.\nParameters may be defined as nested associative arrays as well; in such cases, a\n\n.\n character references an additional layer of hierarchy to dereference:\n\n%foo.bar%\n refers to the paramter found at \n'foo' => [ 'bar' => 'value' ]\n.\n\n\nIf you wish to use a literal \n%name%\n within your configuration, you \nmust\n\ndouble-escape the percentage signs: \n%%name%%\n. Failure to do so will result in\nan exception when post-processing the configuration.\n\n\nAs a self-contained example:\n\n\nuse Zend\\ConfigAggregator\\ArrayProvider;\nuse Zend\\ConfigAggregator\\ConfigAggregator;\nuse Zend\\ConfigAggregatorParameters\\ParameterPostProcessor;\n\n$aggregator = new ConfigAggregator(\n    [\n        new ArrayProvider([\n            'parameter_usage' => '%foo%',\n            'parameter_name' => '%%foo%%',\n            'recursive_parameter_usage' => '%bar.baz%',\n        ]),\n    ],\n    null,\n    [\n        new ParameterPostProcessor([\n            'foo' => 'bar',\n            'bar' => [\n                'baz' => 'qoo',\n            ],\n        ]),\n    ]\n);\n\nvar_dump($aggregator->getMergedConfig());\n\n\n\nThe result of the above will be:\n\n\narray(3) {\n  'parameter_usage' =>\n  string(3) \"bar\"\n  'parameter_name' =>\n  string(5) \"%foo%\"\n  'recursive_parameter_usage' =>\n  string(3) \"qoo\"\n  'parameters' =>\n  array(3) {\n    'foo' => \n     string(3) \"bar\"\n    'bar' =>\n    array(1) {\n      'baz' =>\n      string(3) \"qoo\"\n    }\n    'bar.baz' =>\n    string(3) \"qoo\"\n  }\n}",
            "title": "Usage"
        },
        {
            "location": "/usage/#usage",
            "text": "This package supplies a  zend-config-aggregator post processor \nthat consumes the  Symfony DependencyInjection ParameterBag \nin order to allow users to define parameters to re-use within their\nconfiguration.  As an example, one could define an API key, cache path, or other common\nfilesystem location  once  as a  parameter , and then refer to that parameter multiple times  within the configuration, in order to simplify updates to the\nvalue.  Parameters are referenced within configuration using  %name%  notation.\nParameters may be defined as nested associative arrays as well; in such cases, a .  character references an additional layer of hierarchy to dereference: %foo.bar%  refers to the paramter found at  'foo' => [ 'bar' => 'value' ] .  If you wish to use a literal  %name%  within your configuration, you  must \ndouble-escape the percentage signs:  %%name%% . Failure to do so will result in\nan exception when post-processing the configuration.  As a self-contained example:  use Zend\\ConfigAggregator\\ArrayProvider;\nuse Zend\\ConfigAggregator\\ConfigAggregator;\nuse Zend\\ConfigAggregatorParameters\\ParameterPostProcessor;\n\n$aggregator = new ConfigAggregator(\n    [\n        new ArrayProvider([\n            'parameter_usage' => '%foo%',\n            'parameter_name' => '%%foo%%',\n            'recursive_parameter_usage' => '%bar.baz%',\n        ]),\n    ],\n    null,\n    [\n        new ParameterPostProcessor([\n            'foo' => 'bar',\n            'bar' => [\n                'baz' => 'qoo',\n            ],\n        ]),\n    ]\n);\n\nvar_dump($aggregator->getMergedConfig());  The result of the above will be:  array(3) {\n  'parameter_usage' =>\n  string(3) \"bar\"\n  'parameter_name' =>\n  string(5) \"%foo%\"\n  'recursive_parameter_usage' =>\n  string(3) \"qoo\"\n  'parameters' =>\n  array(3) {\n    'foo' => \n     string(3) \"bar\"\n    'bar' =>\n    array(1) {\n      'baz' =>\n      string(3) \"qoo\"\n    }\n    'bar.baz' =>\n    string(3) \"qoo\"\n  }\n}",
            "title": "Usage"
        }
    ]
}